{
  "swagger": "2.0",
  "info": {
    "title": "Compass",
    "description": "Documentation of our Compass API with gRPC and gRPC-Gateway.",
    "version": "0.1.9",
    "license": {
      "name": "Apache License 2.0",
      "url": "https://github.com/odpf/compass/blob/main/LICENSE"
    }
  },
  "tags": [
    {
      "name": "CompassService"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1beta1/assets": {
      "get": {
        "summary": "Get list of assets",
        "description": "Returns list of assets, optionally filtered by type and service",
        "operationId": "CompassService_GetAllAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetAllAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "text",
            "description": "filter by text",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "filter by type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service",
            "description": "filter by service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "description": "maximum size to fetch",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "offset to fetch from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "withTotal",
            "description": "if set include total field in response",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Asset"
        ]
      },
      "put": {
        "summary": "Upsert an asset",
        "description": "Create a new asset if a combination of urn, type and service does not exist. If exists update instead",
        "operationId": "CompassService_UpsertAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpsertAssetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1UpsertAssetRequest"
            }
          }
        ],
        "tags": [
          "Asset"
        ]
      },
      "patch": {
        "summary": "Patch/Create an asset",
        "description": "Similar to Upsert but with patch strategy and different body format",
        "operationId": "CompassService_UpsertPatchAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpsertPatchAssetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1UpsertPatchAssetRequest"
            }
          }
        ],
        "tags": [
          "Asset"
        ]
      }
    },
    "/v1beta1/assets/{id}": {
      "get": {
        "summary": "Find an asset",
        "description": "Returns a single asset with given ID",
        "operationId": "CompassService_GetAssetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetAssetByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Asset"
        ]
      },
      "delete": {
        "summary": "Delete an asset",
        "description": "Delete a single asset with given ID",
        "operationId": "CompassService_DeleteAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteAssetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Asset"
        ]
      }
    },
    "/v1beta1/assets/{id}/stargazers": {
      "get": {
        "summary": "Find users that stars an asset",
        "description": "Returns a list of users that stars an asset",
        "operationId": "CompassService_GetAssetStargazers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetAssetStargazersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Asset"
        ]
      }
    },
    "/v1beta1/assets/{id}/versions": {
      "get": {
        "summary": "Get version history of an asset",
        "description": "Returns a list of asset version history",
        "operationId": "CompassService_GetAssetVersionHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetAssetVersionHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Asset"
        ]
      }
    },
    "/v1beta1/assets/{id}/versions/{version}": {
      "get": {
        "summary": "Get asset's previous version",
        "description": "Returns a specific version of an asset",
        "operationId": "CompassService_GetAssetByVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetAssetByVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Asset"
        ]
      }
    },
    "/v1beta1/discussions": {
      "get": {
        "summary": "Get all discussions",
        "operationId": "CompassService_GetAllDiscussions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetAllDiscussionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assignee",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Discussion"
        ]
      },
      "post": {
        "summary": "Create a discussion",
        "operationId": "CompassService_CreateDiscussion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateDiscussionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1CreateDiscussionRequest"
            }
          }
        ],
        "tags": [
          "Discussion"
        ]
      }
    },
    "/v1beta1/discussions/{discussionId}/comments": {
      "get": {
        "summary": "Get all comments of a discussion",
        "operationId": "CompassService_GetAllComments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetAllCommentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Discussion",
          "Comment"
        ]
      },
      "post": {
        "summary": "Create a comment of a discussion",
        "operationId": "CompassService_CreateComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string"
                }
              },
              "description": "Request to be sent to create a comment",
              "title": "CreateCommentRequest",
              "required": [
                "body"
              ]
            }
          }
        ],
        "tags": [
          "Discussion",
          "Comment"
        ]
      }
    },
    "/v1beta1/discussions/{discussionId}/comments/{id}": {
      "get": {
        "summary": "Get a comment of a discussion",
        "operationId": "CompassService_GetComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Discussion",
          "Comment"
        ]
      },
      "delete": {
        "summary": "Delete a comment of a discussion",
        "operationId": "CompassService_DeleteComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Discussion",
          "Comment"
        ]
      },
      "put": {
        "summary": "Update a comment of a discussion",
        "operationId": "CompassService_UpdateComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "discussionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string"
                }
              },
              "title": "UpdateCommentRequest"
            }
          }
        ],
        "tags": [
          "Discussion",
          "Comment"
        ]
      }
    },
    "/v1beta1/discussions/{id}": {
      "get": {
        "summary": "Get a discussion",
        "operationId": "CompassService_GetDiscussion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetDiscussionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Discussion"
        ]
      },
      "patch": {
        "summary": "Patch a discussion",
        "operationId": "CompassService_PatchDiscussion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1PatchDiscussionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "assets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "assignees": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "title": "PatchDiscussionRequest"
            }
          }
        ],
        "tags": [
          "Discussion"
        ]
      }
    },
    "/v1beta1/lineage/{urn}": {
      "get": {
        "summary": "Get Lineage Graph",
        "description": "Get lineage graph of an asset",
        "operationId": "CompassService_GetGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetGraphResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Lineage",
          "Asset"
        ]
      }
    },
    "/v1beta1/search": {
      "get": {
        "summary": "Search for an asset",
        "description": "API for querying documents. 'text' is fuzzy matched against all the available datasets, and matched results are returned. You can specify additional match criteria using 'filter.*' query parameters. You can specify each filter multiple times to specify a set of values for those filters. For instance, to specify two landscape 'vn' and 'th', the query could be `/search/?text=\u003ctext\u003e\u0026filter.environment=integration\u0026filter.landscape=vn\u0026filter.landscape=th`",
        "operationId": "CompassService_SearchAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1SearchAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "text",
            "description": "text to search for (fuzzy)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rankby",
            "description": "descendingly sort based on a numeric field in the record. the nested field is written with period separated field name. eg, \"data.profile.usage_count\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchby",
            "description": "search on a specific records field. the nested field is written with period separated field name. eg, \"data.schema.columns.name\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "description": "number of results to return",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Search",
          "Asset"
        ]
      }
    },
    "/v1beta1/search/suggest": {
      "get": {
        "summary": "Suggest an asset",
        "operationId": "CompassService_SuggestAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1SuggestAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "text",
            "description": "text to search for (fuzzy)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rankby",
            "description": "descendingly sort based on a numeric field in the record. the nested field is written with period separated field name. eg, \"data.profile.usage_count\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchby",
            "description": "search on a specific records field. the nested field is written with period separated field name. eg, \"data.schema.columns.name\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "description": "number of results to return",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Search",
          "Asset"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1Asset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "urn": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "labels": {
          "type": "object"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1User"
          }
        },
        "version": {
          "type": "string"
        },
        "updatedBy": {
          "$ref": "#/definitions/v1beta1User"
        },
        "changelog": {
          "$ref": "#/definitions/v1beta1Changelog"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Asset"
    },
    "v1beta1Change": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "path": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "from": {
          "type": "object"
        },
        "to": {
          "type": "object"
        }
      },
      "title": "Change"
    },
    "v1beta1Changelog": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Change"
          }
        }
      },
      "title": "Changelog"
    },
    "v1beta1Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "discussionId": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/v1beta1User"
        },
        "updatedBy": {
          "$ref": "#/definitions/v1beta1User"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Comment"
    },
    "v1beta1CreateCommentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "CreateCommentResponse"
    },
    "v1beta1CreateDiscussionRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request to be sent to create a discussion",
      "title": "CreateDiscussionRequest",
      "required": [
        "title",
        "body",
        "type"
      ]
    },
    "v1beta1CreateDiscussionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "CreateDiscussionResponse"
    },
    "v1beta1DeleteAssetResponse": {
      "type": "object"
    },
    "v1beta1DeleteCommentResponse": {
      "type": "object"
    },
    "v1beta1Discussion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "owner": {
          "$ref": "#/definitions/v1beta1User"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Discussion"
    },
    "v1beta1GetAllAssetsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Asset"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1beta1GetAllCommentsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Comment"
          }
        }
      },
      "title": "GetAllCommentsResponse"
    },
    "v1beta1GetAllDiscussionsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Discussion"
          }
        }
      },
      "title": "GetAllDiscussionsResponse"
    },
    "v1beta1GetAssetByIDResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1beta1Asset"
        }
      }
    },
    "v1beta1GetAssetByVersionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1beta1Asset"
        }
      }
    },
    "v1beta1GetAssetStargazersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1User"
          }
        }
      }
    },
    "v1beta1GetAssetVersionHistoryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Asset"
          }
        }
      }
    },
    "v1beta1GetCommentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1beta1Comment"
        }
      },
      "title": "GetCommentResponse"
    },
    "v1beta1GetDiscussionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1beta1Discussion"
        }
      },
      "title": "GetDiscussionResponse"
    },
    "v1beta1GetGraphResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1LineageEdge"
          }
        }
      }
    },
    "v1beta1LineageEdge": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "prop": {
          "type": "object"
        }
      }
    },
    "v1beta1LineageNode": {
      "type": "object",
      "properties": {
        "urn": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      }
    },
    "v1beta1PatchDiscussionResponse": {
      "type": "object"
    },
    "v1beta1SearchAssetsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Asset"
          }
        }
      }
    },
    "v1beta1SuggestAssetsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1UpdateCommentResponse": {
      "type": "object"
    },
    "v1beta1UpsertAssetRequest": {
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/v1beta1UpsertAssetRequestBaseAsset"
        },
        "upstreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1LineageNode"
          }
        },
        "downstreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1LineageNode"
          }
        }
      }
    },
    "v1beta1UpsertAssetRequestBaseAsset": {
      "type": "object",
      "properties": {
        "urn": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "description of an asset"
        },
        "data": {
          "type": "object"
        },
        "labels": {
          "type": "object",
          "description": "labels of an asset"
        }
      }
    },
    "v1beta1UpsertAssetResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1beta1UpsertPatchAssetRequest": {
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/v1beta1UpsertPatchAssetRequestBaseAsset"
        },
        "upstreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1LineageNode"
          }
        },
        "downstreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1LineageNode"
          }
        }
      }
    },
    "v1beta1UpsertPatchAssetRequestBaseAsset": {
      "type": "object",
      "properties": {
        "urn": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "name of an asset"
        },
        "service": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "description of an asset"
        },
        "data": {
          "type": "object",
          "description": "dynamic data of an asset"
        },
        "labels": {
          "type": "object",
          "description": "labels of an asset"
        }
      }
    },
    "v1beta1UpsertPatchAssetResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1beta1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "User"
    }
  },
  "externalDocs": {
    "description": "More about Compass",
    "url": "https://odpf.gitbook.io/compass/"
  }
}
