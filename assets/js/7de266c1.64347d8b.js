"use strict";(self.webpackChunkcompass=self.webpackChunkcompass||[]).push([[643],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2866:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),s=["components"],o={},p="Overview",l={unversionedId:"concepts/overview",id:"concepts/overview",title:"Overview",description:"Compass has three major concept when it comes to data ingestion: Asset, Type, and Service.",source:"@site/docs/concepts/overview.mdx",sourceDirName:"concepts",slug:"/concepts/overview",permalink:"/compass/concepts/overview",draft:!1,editUrl:"https://github.com/raystack/compass/edit/master/docs/docs/concepts/overview.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Discussion",permalink:"/compass/guides/discussion"},next:{title:"Asset",permalink:"/compass/concepts/asset"}},c={},u=[{value:"Discussion",id:"discussion",level:2},{value:"Starring",id:"starring",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Compass has three major concept when it comes to data ingestion: Asset, Type, and Service."),(0,i.kt)("p",null,"Asset is the main model that represents a metadata of a specific service with a specific type."),(0,i.kt)("p",null,"Type defines a \u2018type\u2019 of an asset and it is pre-defined. Compass currently supports the following types:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"table")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"job")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"dashboard")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"topic")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"feature_table")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"model")," (under development)"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"application")," (under development)")),(0,i.kt)("p",null,"Service defines the application or source that maintains or generates the asset. Examples would be ",(0,i.kt)("inlineCode",{parentName:"p"},"biquery"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"postgres"),", etc."),(0,i.kt)("p",null,"Some features that compass has:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/compass/tour/querying-assets"},"Discovery")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/compass/tour/asset-lineage"},"Lineage")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./asset#tagging-an-asset"},"Asset Tagging")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/compass/concepts/user"},"User")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/compass/guides/discussion"},"Discussion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/compass/guides/starring"},"Starring"))),(0,i.kt)("h2",{id:"discussion"},"Discussion"),(0,i.kt)("p",null,"Compass supports discussion feature. User could drop comments in each discussion. Currently, there are three types of discussions ",(0,i.kt)("inlineCode",{parentName:"p"},"issues"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"open ended"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"question and answer"),". Depending on the type, the discussion could have multiple possible states. In the current version, all types only have two states: ",(0,i.kt)("inlineCode",{parentName:"p"},"open")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"closed"),". A newly created discussion will always be assign an ",(0,i.kt)("inlineCode",{parentName:"p"},"open")," state. More detail about ",(0,i.kt)("a",{parentName:"p",href:"/compass/guides/discussion"},"Discussion"),"."),(0,i.kt)("h2",{id:"starring"},"Starring"),(0,i.kt)("p",null,"Compass allows a user to stars an asset. This bookmarking functionality is introduced to increase the speed of a user to get information. There is also an API to see which users star an asset (stargazers). More detail about ",(0,i.kt)("a",{parentName:"p",href:"/compass/guides/starring"},"Starring"),"."))}d.isMDXComponent=!0}}]);