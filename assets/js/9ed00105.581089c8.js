"use strict";(self.webpackChunkcompass=self.webpackChunkcompass||[]).push([[4],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(t),d=r,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return t?a.createElement(h,s(s({ref:n},p),{},{components:t})):a.createElement(h,s({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9733:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),s=["components"],o={},l="Configuration",c={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"Compass binary contains both the CLI client and the server. Each has it's own configuration in order to run. Server configuration contains information such as database credentials, elastic search brokers, log severity, etc. while CLI client configuration only has configuration about which server to connect.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/compass/configuration",draft:!1,editUrl:"https://github.com/raystack/compass/edit/master/docs/docs/configuration.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Installation",permalink:"/compass/installation"},next:{title:"Introduction",permalink:"/compass/tour/introduction"}},p={},u=[{value:"Server Setup",id:"server-setup",level:2},{value:"General pre-requisites",id:"general-pre-requisites",level:4},{value:"Using the CLI",id:"using-the-cli",level:2},{value:"Using config file",id:"using-config-file",level:3},{value:"Using environment variable",id:"using-environment-variable",level:3},{value:"Starting the server",id:"starting-the-server",level:3},{value:"Using <code>--config</code> flag",id:"using---config-flag",level:4},{value:"Using the Docker",id:"using-the-docker",level:2},{value:"Using config file",id:"using-config-file-1",level:3},{value:"Using environment variables",id:"using-environment-variables",level:3},{value:"Using the Helm chart",id:"using-the-helm-chart",level:2},{value:"Pre-requisites for Helm chart",id:"pre-requisites-for-helm-chart",level:3},{value:"Add Raystack Helm repository",id:"add-raystack-helm-repository",level:3},{value:"Setup helm values",id:"setup-helm-values",level:3},{value:"Client Initialisation",id:"client-initialisation",level:2},{value:"Required Header/Metadata in API",id:"required-headermetadata-in-api",level:4}],m={toc:u};function d(e){var n=e.components,t=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Compass binary contains both the CLI client and the server. Each has it's own configuration in order to run. Server configuration contains information such as database credentials, elastic search brokers, log severity, etc. while CLI client configuration only has configuration about which server to connect."),(0,i.kt)("h2",{id:"server-setup"},"Server Setup"),(0,i.kt)("p",null,"There are several approaches to setup Compass Server"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#using-the-cli"},"Using the CLI")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#using-the-docker"},"Using the Docker")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#using-the-helm-chart"},"Using the Helm Chart"))),(0,i.kt)("h4",{id:"general-pre-requisites"},"General pre-requisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"PostgreSQL (version 13 or above)"),(0,i.kt)("li",{parentName:"ul"},"ElasticSearch v7 (optional)")),(0,i.kt)("h2",{id:"using-the-cli"},"Using the CLI"),(0,i.kt)("h3",{id:"using-config-file"},"Using config file"),(0,i.kt)("p",null,"Create a config file with the following command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ compass config init\n")),(0,i.kt)("p",null,"alternatively you can ",(0,i.kt)("a",{parentName:"p",href:"#using---config-flag"},"use ",(0,i.kt)("inlineCode",{parentName:"a"},"--config")," flag")," to customize to config file location."),(0,i.kt)("p",null,"You can also ",(0,i.kt)("a",{parentName:"p",href:"#using-environment-variable"},"use environment variables")," to provide the server configuration."),(0,i.kt)("p",null,"Setup up the Postgres database, and ElasticSearch instance and provide the details as shown in the example below."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If you're new to YAML and want to learn more, see ",(0,i.kt)("a",{parentName:"p",href:"https://learnxinyminutes.com/docs/yaml/"},"Learn YAML in Y minutes."))),(0,i.kt)("p",null,"Following is a sample server configuration yaml:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="compass.yaml"',title:'"compass.yaml"'},"log_level: info # debug|info|warning|error|fatal|trace|panic - default: info\n\nelasticsearch:\n  brokers: http://localhost:9200 #required\n\ndb:\n  host: localhost #required\n  port: 5432 #required\n  name: compass #required\n  user: compass #required\n  password: compass_password #required\n  sslmode: disable #optional\n\nservice:\n  host: localhost #required\n  port: 8080 #required\n  identity:\n    headerkey_uuid: Compass-User-UUID #required\n    headerkey_email: Compass-User-Email #optional\n    provider_default_name: shield #optional\n  grpc:\n    port: 8081 #required\n    max_send_msg_size: 33554432\n    max_recv_msg_size: 33554432\n")),(0,i.kt)("h3",{id:"using-environment-variable"},"Using environment variable"),(0,i.kt)("p",null,"All the server configurations can be passed as environment variables using underscore ","_"," as the delimiter between nested keys."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/compass/reference/configuration"},"configuration reference")," for the list of all the configuration keys."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title=".env"',title:'".env"'},"LOG_LEVEL=info\nELASTICSEARCH_BROKERS=http://localhost:9200\nDB_HOST=localhost\nDB_PORT=5432\nDB_NAME=compass\nDB_USER=compass\nDB_PASSWORD=compass_password\nDB_SSLMODE=disable\nSERVICE_HOST=localhost\nSERVICE_PORT=8080\nSERVICE_IDENTITY_HEADERKEY_UUID=Compass-User-UUID\nSERVICE_IDENTITY_HEADERKEY_EMAIL=Compass-User-Email\nSERVICE_IDENTITY_PROVIDER_DEFAULT_NAME=shield\nSERVICE_GRPC_PORT=8081\nSERVICE_GRPC_MAX_SEND_MSG_SIZE=33554432\nSERVICE_GRPC_MAX_RECV_MSG_SIZE=33554432\n")),(0,i.kt)("p",null,"Set the env variable using export"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ export DB_PORT = 5432\n")),(0,i.kt)("h3",{id:"starting-the-server"},"Starting the server"),(0,i.kt)("p",null,"Database migration is required during the first server initialization. In addition, re-running the migration command might be needed in a new release to apply the new schema changes (if any). It's safer to always re-run the migration script before deploying/starting a new release."),(0,i.kt)("p",null,"To initialize the database schema, Run Migrations with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ compass server migrate\n")),(0,i.kt)("p",null,"To run the Compass server use command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ compass server start\n")),(0,i.kt)("h4",{id:"using---config-flag"},"Using ",(0,i.kt)("inlineCode",{parentName:"h4"},"--config")," flag"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ compass server migrate --config=<path-to-file>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ compass server start --config=<path-to-file>\n")),(0,i.kt)("h2",{id:"using-the-docker"},"Using the Docker"),(0,i.kt)("p",null,"To run the Compass server using Docker, you need to have Docker installed on your system. You can find the installation instructions ",(0,i.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"here"),"."),(0,i.kt)("p",null,"You can choose to set the configuration using environment variables or a config file. The environment variables will override the config file."),(0,i.kt)("p",null,"If you use Docker to build compass, then configuring networking requires extra steps. Following is one of doing it by running postgres and elasticsearch inside with ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose")," first."),(0,i.kt)("p",null,"Go to the root of this project and run ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker-compose up\n")),(0,i.kt)("p",null,"Once postgres and elasticsearch has been ready, we can run Compass by passing in the config of postgres and elasticsearch defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file."),(0,i.kt)("h3",{id:"using-config-file-1"},"Using config file"),(0,i.kt)("p",null,"Alternatively you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"compass.yaml")," config file defined ",(0,i.kt)("a",{parentName:"p",href:"#using-config-file"},"above")," and run the following command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker run -d \\\n    --restart=always \\\n    -p 8080:8080 \\\n    -v $(pwd)/compass.yaml:/compass.yaml \\\n    --name compass-server \\\n    raystack/compass:<version> \\\n    server start -c /compass.yaml\n")),(0,i.kt)("h3",{id:"using-environment-variables"},"Using environment variables"),(0,i.kt)("p",null,"All the configs can be passed as environment variables using underscore ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," as the delimiter between nested keys. See the example as discussed ",(0,i.kt)("a",{parentName:"p",href:"#using-environment-variable"},"above")),(0,i.kt)("p",null,"Run the following command to start the server"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker run -d \\\n    --restart=always \\\n    -p 8080:8080 \\\n    --env-file .env \\\n    --name compass-server \\\n    raystack/compass:<version> \\\n    server start\n")),(0,i.kt)("h2",{id:"using-the-helm-chart"},"Using the Helm chart"),(0,i.kt)("h3",{id:"pre-requisites-for-helm-chart"},"Pre-requisites for Helm chart"),(0,i.kt)("p",null,"Compass can be installed in Kubernetes using the Helm chart from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/raystack/charts"},"https://github.com/raystack/charts"),"."),(0,i.kt)("p",null,"Ensure that the following requirements are met:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Kubernetes 1.14+"),(0,i.kt)("li",{parentName:"ul"},"Helm version 3.x is ",(0,i.kt)("a",{parentName:"li",href:"https://helm.sh/docs/intro/install/"},"installed"))),(0,i.kt)("h3",{id:"add-raystack-helm-repository"},"Add Raystack Helm repository"),(0,i.kt)("p",null,"Add Raystack chart repository to Helm:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"helm repo add raystack https://raystack.github.io/charts/\n")),(0,i.kt)("p",null,"You can update the chart repository by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"helm repo update\n")),(0,i.kt)("h3",{id:"setup-helm-values"},"Setup helm values"),(0,i.kt)("p",null,"The following table lists the configurable parameters of the Compass chart and their default values."),(0,i.kt)("p",null,"See full helm values guide ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/raystack/charts/tree/main/stable/compass#values"},"here")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="values.yaml"',title:'"values.yaml"'},'app:\n  image:\n    repository: raystack/compass\n    pullPolicy: Always\n    tag: "0.3.0"\n  container:\n    command:\n      - compass\n    args:\n      - server start\n    livenessProbe:\n      httpGet:\n        path: /ping\n        port: tcp\n    readinessProbe:\n      httpGet:\n        path: /ping\n        port: tcp\n\n  migration:\n    enabled: true\n    command:\n      - compass\n    args:\n      - server migrate\n\n  service:\n    annotations: {}\n\n  ingress:\n    enabled: true\n    annotations:\n      kubernetes.io/ingress.class: contour\n    hosts:\n      - host: compass.example.com\n        paths:\n          - path: /\n            pathType: ImplementationSpecific\n            backend:\n              service:\n                # name: backend_01\n                port:\n                  number: 80\n\n  config:\n    COMPASS_SERVICE_PORT: 8080\n    COMPASS_SERVICE_GRPC_PORT: 8081\n    # COMPASS_SERVICE_HOST: 0.0.0.0\n    # COMPASS_STATSD_ENABLED: false\n    # COMPASS_STATSD_PREFIX: compass\n    # COMPASS_NEWRELIC_ENABLED: false\n    # COMPASS_NEWRELIC_APPNAME: compass\n    # COMPASS_LOG_LEVEL: info\n\n  secretConfig:\n    {}\n    # COMPASS_ELASTICSEARCH_BROKERS: ~\n    # COMPASS_STATSD_ADDRESS: ~\n    # COMPASS_NEWRELIC_LICENSEKEY: ~\n    # COMPASS_DB_HOST: ~\n    # COMPASS_DB_PORT: 5432\n    # COMPASS_DB_NAME: ~\n    # COMPASS_DB_USER: ~\n    # COMPASS_DB_PASSWORD: ~\n    # COMPASS_DB_SSLMODE: disable\n')),(0,i.kt)("p",null,"And install it with the helm command line along with the values file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm install my-release -f values.yaml raystack/compass\n")),(0,i.kt)("h2",{id:"client-initialisation"},"Client Initialisation"),(0,i.kt)("p",null,"Add client configurations in the same ",(0,i.kt)("inlineCode",{parentName:"p"},"~/compass.yaml")," file in root of current directory. Open this file to configure client."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"client:\n  host: localhost:8081\n  serverheaderkey_uuid: Compass-User-UUID\n  serverheadervalue_uuid: john.doe@example.com\n")),(0,i.kt)("h4",{id:"required-headermetadata-in-api"},"Required Header/Metadata in API"),(0,i.kt)("p",null,"Compass has a concept of ",(0,i.kt)("a",{parentName:"p",href:"/compass/concepts/user"},"User"),". In the current version, all HTTP & gRPC APIs in Compass requires an identity header/metadata in the request. The header key is configurable but the default name is ",(0,i.kt)("inlineCode",{parentName:"p"},"Compass-User-UUID"),"."),(0,i.kt)("p",null,"Compass APIs also expect an additional optional e-mail header. This is also configurable and the default name is ",(0,i.kt)("inlineCode",{parentName:"p"},"Compass-User-Email"),". The purpose of having this optional e-mail header is described in the ",(0,i.kt)("a",{parentName:"p",href:"/compass/concepts/user"},"User")," section."),(0,i.kt)("p",null,"If everything goes ok, you should see something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'time="2022-04-27T09:18:08Z" level=info msg="compass starting" version=v0.2.0\ntime="2022-04-27T09:18:08Z" level=info msg="connected to elasticsearch cluster" config="\\"docker-cluster\\" (server version 7.6.1)"\ntime="2022-04-27T09:18:08Z" level=info msg="New Relic monitoring is disabled."\ntime="2022-04-27T09:18:08Z" level=info msg="statsd metrics monitoring is disabled."\ntime="2022-04-27T09:18:08Z" level=info msg="connected to postgres server" host=postgres port=5432\ntime="2022-04-27T09:18:08Z" level=info msg="server started"\n')))}d.isMDXComponent=!0}}]);