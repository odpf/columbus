"use strict";(self.webpackChunkcompass=self.webpackChunkcompass||[]).push([[918],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),i=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=i(a),m=r,h=d["".concat(u,".").concat(m)]||d[m]||p[m]||s;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var i=2;i<s;i++)o[i]=a[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(7294),r=a(6010),s="tabItem_Ymn6";function o(e){var t=e.children,a=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,o),hidden:a},t)}},5488:function(e,t,a){a.d(t,{Z:function(){return m}});var n=a(7462),r=a(7294),s=a(6010),o=a(2389),l=a(7392),u=a(7094),i=a(2466),c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,a,o=e.lazy,d=e.block,m=e.defaultValue,h=e.values,b=e.groupId,f=e.className,y=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=h?h:y.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,l.l)(g,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===m?m:null!=(t=null!=m?m:null==(a=y.find((function(e){return e.props.default})))?void 0:a.props.value)?t:y[0].props.value;if(null!==k&&!g.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,u.U)(),T=w.tabGroupChoices,N=w.setTabGroupChoices,C=(0,r.useState)(k),I=C[0],x=C[1],j=[],U=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var P=T[b];null!=P&&P!==I&&g.some((function(e){return e.value===P}))&&x(P)}var O=function(e){var t=e.currentTarget,a=j.indexOf(t),n=g[a].value;n!==I&&(U(t),x(n),null!=b&&N(b,String(n)))},D=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n,r=j.indexOf(e.currentTarget)+1;a=null!=(n=j[r])?n:j[0];break;case"ArrowLeft":var s,o=j.indexOf(e.currentTarget)-1;a=null!=(s=j[o])?s:j[j.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":d},f)},g.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:I===t?0:-1,"aria-selected":I===t,key:t,ref:function(e){return j.push(e)},onKeyDown:D,onFocus:O,onClick:O},o,{className:(0,s.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":I===t})}),null!=a?a:t)}))),o?(0,r.cloneElement)(y.filter((function(e){return e.props.value===I}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==I})}))))}function m(e){var t=(0,o.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},7116:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return m}});var n=a(7462),r=a(3366),s=(a(7294),a(3905)),o=a(5488),l=a(5162),u=["components"],i={},c="2. Querying your Assets",p={unversionedId:"tour/querying-assets",id:"tour/querying-assets",title:"2. Querying your Assets",description:"In this section, we will learn how we can find and search our assets using the following approaches:",source:"@site/docs/tour/2-querying-assets.mdx",sourceDirName:"tour",slug:"/tour/querying-assets",permalink:"/compass/tour/querying-assets",draft:!1,editUrl:"https://github.com/raystack/compass/edit/master/docs/docs/tour/2-querying-assets.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"docsSidebar",previous:{title:"1. My First Asset",permalink:"/compass/tour/my-first-asset"},next:{title:"3. Asset Lineage",permalink:"/compass/tour/asset-lineage"}},d={},m=[{value:"2.1 Using Asset URN or ID",id:"21-using-asset-urn-or-id",level:2},{value:"2.2 Adding more assets",id:"22-adding-more-assets",level:2},{value:"2.3 Using Search API",id:"23-using-search-api",level:2},{value:"Conclusion",id:"conclusion",level:2}],h={toc:m};function b(e){var t=e.components,a=(0,r.Z)(e,u);return(0,s.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"2-querying-your-assets"},"2. Querying your Assets"),(0,s.kt)("p",null,"In this section, we will learn how we can find and search our assets using the following approaches:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#21-using-asset-urn-or-id"},"Using URN or ID")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#23-using-search-api"},"Using Search API"))),(0,s.kt)("h2",{id:"21-using-asset-urn-or-id"},"2.1 Using Asset URN or ID"),(0,s.kt)("p",null,"Using the Asset URN or ID returned from when ",(0,s.kt)("a",{parentName:"p",href:"/compass/tour/my-first-asset#13-sending-your-first-asset-to-compass"},"you are uploading your asset"),", you can easily find your asset like below"),(0,s.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ compass asset view main-postgres:my-database.orders\n"))),(0,s.kt)(l.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"curl 'http://localhost:8080/v1beta1/assets/main-postgres:my-database.orders' \\\n--header 'Content-Type: application/json' \\\n--header 'Compass-User-UUID: john.doe@example.com'\n")))),(0,s.kt)("p",null,"Response from the above query"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": "cebeb793-8933-434c-b38f-beb6dbad91a5",\n    "urn": "main-postgres:my-database.orders",\n    "type": "table",\n    "service": "postgres",\n    "name": "orders",\n    "description": "",\n    "data": {\n      "database": "my-database",\n      "namespace": "main-postgres"\n    },\n    "labels": null,\n    "owners": [],\n    "version": "0.2",\n    "updated_by": {\n      "uuid": "john.doe@example.com"\n    },\n    "changelog": [],\n    "created_at": "2021-03-22T22:45:11.160593Z",\n    "updated_at": "2021-03-22T22:45:11.160593Z"\n  }\n}\n')),(0,s.kt)("h2",{id:"22-adding-more-assets"},"2.2 Adding more assets"),(0,s.kt)("p",null,"Before we try other APIs let's first add ",(0,s.kt)("strong",{parentName:"p"},"5 additional assets")," to Compass."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"product",label:"Product Table",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location --request PATCH \'http://localhost:8080/v1beta1/assets\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Compass-User-UUID: john.doe@example.com\' \\\n--data-raw \'{\n    "asset": {\n        "urn": "main-postgres:my-database.products",\n        "type": "table",\n        "service": "postgres",\n        "name": "products",\n        "data": {\n            "database": "my-database",\n            "namespace": "main-postgres"\n        }\n    }\n}\n\'\n'))),(0,s.kt)(l.Z,{value:"different-database",label:"Different Database",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location --request PATCH \'http://localhost:8080/v1beta1/assets\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Compass-User-UUID: john.doe@example.com\' \\\n--data-raw \'{\n    "asset": {\n        "urn": "main-postgres:temp-database.invoices",\n        "type": "table",\n        "service": "postgres",\n        "name": "invoices",\n        "data": {\n            "database": "temp-database",\n            "namespace": "main-postgres"\n        }\n    }\n}\n\'\n'))),(0,s.kt)(l.Z,{value:"mysql",label:"MySQL",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location --request PATCH \'http://localhost:8080/v1beta1/assets\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Compass-User-UUID: john.doe@example.com\' \\\n--data-raw \'{\n    "asset": {\n        "urn": "userdb:identity.users",\n        "type": "table",\n        "service": "mysql",\n        "name": "users",\n        "data": {\n            "database": "identity",\n            "namespace": "userdb"\n        }\n    }\n}\n\'\n'))),(0,s.kt)(l.Z,{value:"dashboard-type",label:"Dashboard Type",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location --request PATCH \'http://localhost:8080/v1beta1/assets\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Compass-User-UUID: john.doe@example.com\' \\\n--data-raw \'{\n    "asset": {\n        "urn": "mymetabase:collections/123",\n        "type": "dashboard",\n        "service": "metabase",\n        "name": "My Profit Dashboard",\n        "data": {\n            "collection_id": 123,\n            "charts": [\n              "Income Chart",\n              "Outcome Chart"\n            ]\n        }\n    }\n}\n\'\n')))),(0,s.kt)("h2",{id:"23-using-search-api"},"2.3 Using Search API"),(0,s.kt)("p",null,"Search API is the preferred way when browsing through your assets in Compass. Let's see how powerful Compass is for discovering your assets."),(0,s.kt)("p",null,"Now that we have added more assets to Compass ",(0,s.kt)("a",{parentName:"p",href:"#22-adding-more-assets"},"here"),", let's try to search for our newly added ",(0,s.kt)("inlineCode",{parentName:"p"},"products")," table. To use Search API, we just need to provide a query/text/term."),(0,s.kt)("p",null,"Let's search for our ",(0,s.kt)("inlineCode",{parentName:"p"},"products")," table using a typo query ",(0,s.kt)("inlineCode",{parentName:"p"},'"podcts"'),"."),(0,s.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'$ compass search "podcts"\n'))),(0,s.kt)(l.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"curl 'http://localhost:8080/v1beta1/search?text=podcts' \\\n--header 'Compass-User-UUID: john.doe@example.com'\n")))),(0,s.kt)("p",null,"Search results:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "data": [\n        {\n            "id": "7c0759f4-feec-4b5e-bf26-bf0d0b1236b1",\n            "urn": "main-postgres:my-database.products",\n            "type": "table",\n            "service": "postgres",\n            "name": "products",\n            "description": ""\n        }\n    ]\n}\n')),(0,s.kt)("p",null,"Compass Search API supports fuzzy search, so even when you give ",(0,s.kt)("inlineCode",{parentName:"p"},'"podcts"'),", it will still be able to fetch your ",(0,s.kt)("inlineCode",{parentName:"p"},"products")," table."),(0,s.kt)("h2",{id:"conclusion"},"Conclusion"),(0,s.kt)("p",null,"Search API is a really powerful discovery tool that you can leverage when storing your assets. It has lots of feature like ",(0,s.kt)("inlineCode",{parentName:"p"},"fuzzy search")," which we just saw, you can also easily filter through asset's type, service and much more."),(0,s.kt)("p",null,"Up to this point, you have learnt how to create assets, inserting assets and querying them. Using these features, you can start leveraging Compass to be your Metadata Discovery Service."),(0,s.kt)("p",null,"Next we will see how you can use Compass to build a Lineage between your assets."))}b.isMDXComponent=!0}}]);