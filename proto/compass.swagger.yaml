swagger: "2.0"
info:
  title: Compass
  description: Documentation of our Compass API with gRPC and gRPC-Gateway.
  version: 0.2.1
  license:
    name: Apache License 2.0
    url: https://github.com/odpf/compass/blob/main/LICENSE
tags:
  - name: CompassService
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1beta1/assets:
    get:
      summary: Get list of assets
      description: 'Returns list of assets, optionally filtered by types, services, sorting, fields in asset.data and querying fields '
      operationId: CompassService_GetAllAssets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAllAssetsResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: q
          description: filter by specific query
          in: query
          required: false
          type: string
        - name: q_fields
          description: filter by multiple query fields
          in: query
          required: false
          type: string
        - name: types
          description: filter by multiple types
          in: query
          required: false
          type: string
        - name: services
          description: filter by multiple services
          in: query
          required: false
          type: string
        - name: sort
          description: sorting based on fields
          in: query
          required: false
          type: string
        - name: direction
          description: 'sorting direction can either be asc or desc '
          in: query
          required: false
          type: string
        - name: size
          description: maximum size to fetch
          in: query
          required: false
          type: integer
          format: int64
        - name: offset
          description: offset to fetch from
          in: query
          required: false
          type: integer
          format: int64
        - name: with_total
          description: if set include total field in response
          in: query
          required: false
          type: boolean
      tags:
        - Asset
    put:
      summary: Update/Create an asset
      description: Upsert will update an asset or create a new one if it does not exist yet
      operationId: CompassService_UpsertAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/UpsertAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpsertAssetRequest'
      tags:
        - Asset
    patch:
      summary: Patch/Create an asset
      description: Similar to Upsert but with patch strategy and different body format
      operationId: CompassService_UpsertPatchAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/UpsertPatchAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpsertPatchAssetRequest'
      tags:
        - Asset
  /v1beta1/assets/{asset_urn}/probes:
    post:
      summary: Create asset's probe
      description: Add a new probe to an asset
      operationId: CompassService_CreateAssetProbe
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/CreateAssetProbeResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: asset_urn
          in: path
          required: true
          type: string
        - name: probe
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAssetProbeRequest.Probe'
      tags:
        - Asset
  /v1beta1/assets/{id}:
    get:
      summary: Find an asset
      description: Returns a single asset with given ID
      operationId: CompassService_GetAssetByID
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAssetByIDResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Asset
    delete:
      summary: Delete an asset
      description: Delete a single asset with given ID
      operationId: CompassService_DeleteAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/DeleteAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Asset
  /v1beta1/assets/{id}/stargazers:
    get:
      summary: Find users that stars an asset
      description: Returns a list of users that stars an asset
      operationId: CompassService_GetAssetStargazers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAssetStargazersResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: size
          in: query
          required: false
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Asset
  /v1beta1/assets/{id}/versions:
    get:
      summary: Get version history of an asset
      description: Returns a list of asset version history
      operationId: CompassService_GetAssetVersionHistory
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAssetVersionHistoryResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: size
          in: query
          required: false
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Asset
  /v1beta1/assets/{id}/versions/{version}:
    get:
      summary: Get asset's previous version
      description: Returns a specific version of an asset
      operationId: CompassService_GetAssetByVersion
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAssetByVersionResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: version
          in: path
          required: true
          type: string
      tags:
        - Asset
  /v1beta1/discussions:
    get:
      summary: Get all discussions
      operationId: CompassService_GetAllDiscussions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAllDiscussionsResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: type
          in: query
          required: false
          type: string
        - name: state
          in: query
          required: false
          type: string
        - name: owner
          in: query
          required: false
          type: string
        - name: assignee
          in: query
          required: false
          type: string
        - name: asset
          in: query
          required: false
          type: string
        - name: labels
          in: query
          required: false
          type: string
        - name: sort
          in: query
          required: false
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: size
          in: query
          required: false
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Discussion
    post:
      summary: Create a discussion
      operationId: CompassService_CreateDiscussion
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/CreateDiscussionResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: body
          description: Request to be sent to create a discussion
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDiscussionRequest'
      tags:
        - Discussion
  /v1beta1/discussions/{discussion_id}/comments:
    get:
      summary: Get all comments of a discussion
      operationId: CompassService_GetAllComments
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAllCommentsResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: discussion_id
          in: path
          required: true
          type: string
        - name: sort
          in: query
          required: false
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: size
          in: query
          required: false
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Discussion
        - Comment
    post:
      summary: Create a comment of a discussion
      operationId: CompassService_CreateComment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/CreateCommentResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: discussion_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              body:
                type: string
      tags:
        - Discussion
        - Comment
  /v1beta1/discussions/{discussion_id}/comments/{id}:
    get:
      summary: Get a comment of a discussion
      operationId: CompassService_GetComment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetCommentResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: discussion_id
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Discussion
        - Comment
    delete:
      summary: Delete a comment of a discussion
      operationId: CompassService_DeleteComment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/DeleteCommentResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: discussion_id
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Discussion
        - Comment
    put:
      summary: Update a comment of a discussion
      operationId: CompassService_UpdateComment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/UpdateCommentResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: discussion_id
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              body:
                type: string
      tags:
        - Discussion
        - Comment
  /v1beta1/discussions/{id}:
    get:
      summary: Get a discussion
      operationId: CompassService_GetDiscussion
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetDiscussionResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Discussion
    patch:
      summary: Patch a discussion
      operationId: CompassService_PatchDiscussion
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/PatchDiscussionResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              assets:
                type: array
                items:
                  type: string
              assignees:
                type: array
                items:
                  type: string
              body:
                type: string
              labels:
                type: array
                items:
                  type: string
              state:
                type: string
              title:
                type: string
              type:
                type: string
      tags:
        - Discussion
  /v1beta1/lineage/{urn}:
    get:
      summary: Get Lineage Graph
      description: Returns the lineage graph. Each entry in the graph describes a (edge) directed relation of assets with source and destination using it's urn, type, and service.
      operationId: CompassService_GetGraph
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetGraphResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: urn
          in: path
          required: true
          type: string
          pattern: .+
        - name: level
          in: query
          required: false
          type: integer
          format: int64
        - name: direction
          in: query
          required: false
          type: string
      tags:
        - Lineage
        - Asset
  /v1beta1/me/discussions:
    get:
      summary: Get all discussions of a user
      description: Returns all discussions given possible filters of a user
      operationId: CompassService_GetMyDiscussions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetMyDiscussionsResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: type
          in: query
          required: false
          type: string
        - name: state
          in: query
          required: false
          type: string
        - name: asset
          in: query
          required: false
          type: string
        - name: labels
          in: query
          required: false
          type: string
        - name: sort
          in: query
          required: false
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: size
          in: query
          required: false
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - User
        - Discussion
  /v1beta1/me/starred:
    get:
      summary: Get my starred assets
      description: Get all assets starred by me
      operationId: CompassService_GetMyStarredAssets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetMyStarredAssetsResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: size
          in: query
          required: false
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - User
        - Star
  /v1beta1/me/starred/{asset_id}:
    get:
      summary: Get my starred asset
      description: Get an asset starred by me
      operationId: CompassService_GetMyStarredAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetMyStarredAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: asset_id
          in: path
          required: true
          type: string
      tags:
        - User
        - Star
    delete:
      summary: Unstar an asset
      description: Unmark my starred asset
      operationId: CompassService_UnstarAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/UnstarAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: asset_id
          in: path
          required: true
          type: string
      tags:
        - User
        - Star
    put:
      summary: Star an asset
      description: Mark an asset with a star
      operationId: CompassService_StarAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/StarAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: asset_id
          in: path
          required: true
          type: string
      tags:
        - User
        - Star
  /v1beta1/search:
    get:
      summary: Search for an asset
      description: API for querying documents. 'text' is fuzzy matched against all the available datasets, and matched results are returned. You can specify additional match criteria using 'filter[.*]' query parameters. You can specify each filter multiple times to specify a set of values for those filters. For instance, to specify two landscape 'vn' and 'th', the query could be `/search/?text=<text>&filter[environment]=integration&filter[landscape]=vn&filter[landscape]=th`. As an alternative, this API also supports fuzzy filter match with 'query' query params. For instance, searching assets that has 'bigqu' term in its description `/search/?text=<text>&query[description]=bigqu`
      operationId: CompassService_SearchAssets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/SearchAssetsResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: text
          description: text to search for (fuzzy)
          in: query
          required: false
          type: string
        - name: rankby
          description: descendingly sort based on a numeric field in the asset. the nested field is written with period separated field name. eg, "rankby[data.profile.usage_count]"
          in: query
          required: false
          type: string
        - name: size
          description: number of results to return
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Search
        - Asset
  /v1beta1/search/suggest:
    get:
      summary: Suggest an asset
      description: API for retreiving N number of asset names that similar with the `text`. By default, N = 5 for now and hardcoded in the code.
      operationId: CompassService_SuggestAssets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/SuggestAssetsResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: text
          description: text to search for suggestions
          in: query
          required: false
          type: string
      tags:
        - Search
        - Asset
  /v1beta1/tags/assets:
    post:
      summary: Tag an asset
      description: Tag an asset with a tag template
      operationId: CompassService_CreateTagAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/CreateTagAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: body
          description: Request to be sent to create a tag
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTagAssetRequest'
      tags:
        - Tag
  /v1beta1/tags/assets/{asset_id}:
    get:
      summary: Get an asset's tags
      description: Get all tags for an assets
      operationId: CompassService_GetAllTagsByAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAllTagsByAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: asset_id
          in: path
          required: true
          type: string
      tags:
        - Tag
  /v1beta1/tags/assets/{asset_id}/templates/{template_urn}:
    get:
      summary: Find a tag by asset and template
      description: Find a single tag using asset id and template urn
      operationId: CompassService_GetTagByAssetAndTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetTagByAssetAndTemplateResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: asset_id
          in: path
          required: true
          type: string
        - name: template_urn
          in: path
          required: true
          type: string
      tags:
        - Tag
    delete:
      summary: Remove a tag on an asset
      description: Remove a tag on an asset in a type
      operationId: CompassService_DeleteTagAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/DeleteTagAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: asset_id
          in: path
          required: true
          type: string
        - name: template_urn
          in: path
          required: true
          type: string
      tags:
        - Tag
    put:
      summary: Update a tag on an asset
      description: Update a tag on an asset
      operationId: CompassService_UpdateTagAsset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/UpdateTagAssetResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: asset_id
          in: path
          required: true
          type: string
        - name: template_urn
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              tag_values:
                type: array
                items:
                  $ref: '#/definitions/TagValue'
              template_description:
                type: string
              template_display_name:
                type: string
            description: Request to be sent to update an asset tag
            title: UpdateTagAssetRequest
            required:
              - tag_values
      tags:
        - Tag
  /v1beta1/tags/templates:
    get:
      summary: Get all tag templates
      description: Get all available tag templates
      operationId: CompassService_GetAllTagTemplates
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAllTagTemplatesResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: urn
          in: query
          required: false
          type: string
      tags:
        - Tag
    post:
      summary: Create a template
      description: Create a new tag template
      operationId: CompassService_CreateTagTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/CreateTagTemplateResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: body
          description: Request to be sent to create a tag's template
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTagTemplateRequest'
      tags:
        - Tag
  /v1beta1/tags/templates/{template_urn}:
    get:
      summary: Get a tag template
      description: Get a single tag template
      operationId: CompassService_GetTagTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetTagTemplateResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: template_urn
          in: path
          required: true
          type: string
      tags:
        - Tag
    delete:
      summary: Delete a tag template
      description: Delete a single tag template
      operationId: CompassService_DeleteTagTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/DeleteTagTemplateResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: template_urn
          in: path
          required: true
          type: string
      tags:
        - Tag
    put:
      summary: Update a template
      description: Update an existing tag template
      operationId: CompassService_UpdateTagTemplate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/UpdateTagTemplateResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: template_urn
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              description:
                type: string
              display_name:
                type: string
              fields:
                type: array
                items:
                  $ref: '#/definitions/TagTemplateField'
            description: Request to be sent to update a tag's template
            title: UpdateTagTemplateRequest
            required:
              - display_name
              - description
              - fields
      tags:
        - Tag
  /v1beta1/types:
    get:
      summary: fetch all types
      description: Fetch all types supported in Compass
      operationId: CompassService_GetAllTypes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAllTypesResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: q
          description: filter by specific query
          in: query
          required: false
          type: string
        - name: q_fields
          description: filter by multiple query fields
          in: query
          required: false
          type: string
        - name: types
          description: filter by multiple types
          in: query
          required: false
          type: string
        - name: services
          description: filter by multiple services
          in: query
          required: false
          type: string
      tags:
        - Type
  /v1beta1/users/{user_id}/starred:
    get:
      summary: Get assets starred by a user
      description: Get all assets starred by a user
      operationId: CompassService_GetUserStarredAssets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetUserStarredAssetsResponse'
        "400":
          description: Returned when the data that user input is wrong.
          schema:
            $ref: '#/definitions/Status'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/Status'
        "409":
          description: Returned when the resource already exist.
          schema:
            $ref: '#/definitions/Status'
        "500":
          description: Returned when theres is something wrong on the server side.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
        - name: size
          in: query
          required: false
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - User
        - Star
definitions:
  Any:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  Change:
    type: object
    properties:
      from: {}
      path:
        type: array
        items:
          type: string
      to: {}
      type:
        type: string
    title: Change
  Comment:
    type: object
    properties:
      body:
        type: string
      created_at:
        type: string
        format: date-time
      discussion_id:
        type: string
      id:
        type: string
      owner:
        $ref: '#/definitions/User'
      updated_at:
        type: string
        format: date-time
      updated_by:
        $ref: '#/definitions/User'
    title: Comment
  CreateAssetProbeRequest.Probe:
    type: object
    properties:
      metadata:
        type: object
      status:
        type: string
      status_reason:
        type: string
      timestamp:
        type: string
        format: date-time
    required:
      - status
  CreateAssetProbeResponse:
    type: object
    properties:
      id:
        type: string
  CreateCommentResponse:
    type: object
    properties:
      id:
        type: string
  CreateDiscussionRequest:
    type: object
    properties:
      assets:
        type: array
        items:
          type: string
      assignees:
        type: array
        items:
          type: string
      body:
        type: string
      labels:
        type: array
        items:
          type: string
      state:
        type: string
      title:
        type: string
      type:
        type: string
    description: Request to be sent to create a discussion
    required:
      - title
      - body
  CreateDiscussionResponse:
    type: object
    properties:
      id:
        type: string
  CreateTagAssetRequest:
    type: object
    properties:
      asset_id:
        type: string
      tag_values:
        type: array
        items:
          $ref: '#/definitions/TagValue'
      template_description:
        type: string
      template_display_name:
        type: string
      template_urn:
        type: string
    description: Request to be sent to create a tag
    title: CreateTagAssetRequest
    required:
      - asset_id
      - template_urn
      - tag_values
  CreateTagAssetResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1beta1.Tag'
  CreateTagTemplateRequest:
    type: object
    properties:
      description:
        type: string
      display_name:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/TagTemplateField'
      urn:
        type: string
    description: Request to be sent to create a tag's template
    title: CreateTagTemplateRequest
    required:
      - urn
      - display_name
      - description
      - tag_values
  CreateTagTemplateResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/TagTemplate'
  DeleteAssetResponse:
    type: object
  DeleteCommentResponse:
    type: object
  DeleteTagAssetResponse:
    type: object
  DeleteTagTemplateResponse:
    type: object
  Discussion:
    type: object
    properties:
      assets:
        type: array
        items:
          type: string
      assignees:
        type: array
        items:
          type: string
      body:
        type: string
      created_at:
        type: string
        format: date-time
      id:
        type: string
      labels:
        type: array
        items:
          type: string
      owner:
        $ref: '#/definitions/User'
      state:
        type: string
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
        format: date-time
    title: Discussion
  GetAllAssetsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/v1beta1.Asset'
      total:
        type: integer
        format: int64
  GetAllCommentsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Comment'
  GetAllDiscussionsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Discussion'
  GetAllTagTemplatesResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/TagTemplate'
  GetAllTagsByAssetResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/v1beta1.Tag'
  GetAllTypesResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/v1beta1.Type'
  GetAssetByIDResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1beta1.Asset'
  GetAssetByVersionResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1beta1.Asset'
  GetAssetStargazersResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/User'
  GetAssetVersionHistoryResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/v1beta1.Asset'
  GetCommentResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Comment'
  GetDiscussionResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Discussion'
  GetGraphResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/LineageEdge'
  GetMyDiscussionsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Discussion'
  GetMyStarredAssetResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1beta1.Asset'
  GetMyStarredAssetsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/v1beta1.Asset'
  GetTagByAssetAndTemplateResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1beta1.Tag'
  GetTagTemplateResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/TagTemplate'
  GetUserStarredAssetsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/v1beta1.Asset'
  LineageEdge:
    type: object
    properties:
      prop:
        type: object
      source:
        type: string
      target:
        type: string
    title: LineageEdge
  LineageNode:
    type: object
    properties:
      service:
        type: string
      type:
        type: string
      urn:
        type: string
    title: LineageNode
  NullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  PatchDiscussionResponse:
    type: object
  SearchAssetsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/v1beta1.Asset'
  StarAssetResponse:
    type: object
    properties:
      id:
        type: string
  Status:
    type: object
    properties:
      code:
        type: integer
        format: int32
      details:
        type: array
        items:
          $ref: '#/definitions/Any'
      message:
        type: string
  SuggestAssetsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: string
  TagTemplate:
    type: object
    properties:
      created_at:
        type: string
        format: date-time
      description:
        type: string
      display_name:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/TagTemplateField'
      updated_at:
        type: string
        format: date-time
      urn:
        type: string
    title: TagTemplate
  TagTemplateField:
    type: object
    properties:
      created_at:
        type: string
        format: date-time
      data_type:
        type: string
      description:
        type: string
      display_name:
        type: string
      id:
        type: integer
        format: int64
      options:
        type: array
        items:
          type: string
      required:
        type: boolean
      updated_at:
        type: string
        format: date-time
      urn:
        type: string
    title: TagTemplateField
  TagValue:
    type: object
    properties:
      created_at:
        type: string
        format: date-time
      field_data_type:
        type: string
      field_description:
        type: string
      field_display_name:
        type: string
      field_id:
        type: integer
        format: int64
      field_options:
        type: array
        items:
          type: string
      field_required:
        type: boolean
      field_urn:
        type: string
      field_value: {}
      updated_at:
        type: string
        format: date-time
    title: TagValue
  UnstarAssetResponse:
    type: object
  UpdateCommentResponse:
    type: object
  UpdateTagAssetResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1beta1.Tag'
  UpdateTagTemplateResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/TagTemplate'
  UpsertAssetRequest:
    type: object
    properties:
      asset:
        $ref: '#/definitions/UpsertAssetRequest.Asset'
      downstreams:
        type: array
        items:
          $ref: '#/definitions/LineageNode'
      upstreams:
        type: array
        items:
          $ref: '#/definitions/LineageNode'
  UpsertAssetRequest.Asset:
    type: object
    properties:
      data:
        type: object
        description: dynamic data of an asset
      description:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
        description: labels of an asset
      name:
        type: string
      owners:
        type: array
        items:
          $ref: '#/definitions/User'
        description: list of owners of the asset
      service:
        type: string
      type:
        type: string
      url:
        type: string
      urn:
        type: string
  UpsertAssetResponse:
    type: object
    properties:
      id:
        type: string
  UpsertPatchAssetRequest:
    type: object
    properties:
      asset:
        $ref: '#/definitions/UpsertPatchAssetRequest.Asset'
      downstreams:
        type: array
        items:
          $ref: '#/definitions/LineageNode'
      upstreams:
        type: array
        items:
          $ref: '#/definitions/LineageNode'
  UpsertPatchAssetRequest.Asset:
    type: object
    properties:
      data:
        type: object
        description: dynamic data of an asset
      description:
        type: string
        description: description of an asset
      labels:
        type: object
        additionalProperties:
          type: string
        description: labels of an asset
      name:
        type: string
        description: name of an asset
      owners:
        type: array
        items:
          $ref: '#/definitions/User'
        description: list of owners of the asset
      service:
        type: string
      type:
        type: string
      url:
        type: string
      urn:
        type: string
  UpsertPatchAssetResponse:
    type: object
    properties:
      id:
        type: string
  User:
    type: object
    properties:
      created_at:
        type: string
        format: date-time
      email:
        type: string
      id:
        type: string
      provider:
        type: string
      updated_at:
        type: string
        format: date-time
      uuid:
        type: string
    title: User
  v1beta1.Asset:
    type: object
    properties:
      changelog:
        type: array
        items:
          $ref: '#/definitions/Change'
      created_at:
        type: string
        format: date-time
      data:
        type: object
      description:
        type: string
      id:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
      owners:
        type: array
        items:
          $ref: '#/definitions/User'
      probes:
        type: array
        items:
          $ref: '#/definitions/v1beta1.Probe'
      service:
        type: string
      type:
        type: string
      updated_at:
        type: string
        format: date-time
      updated_by:
        $ref: '#/definitions/User'
      url:
        type: string
      urn:
        type: string
      version:
        type: string
    title: Asset
  v1beta1.Probe:
    type: object
    properties:
      asset_urn:
        type: string
      created_at:
        type: string
        format: date-time
      id:
        type: string
      metadata:
        type: object
      status:
        type: string
      status_reason:
        type: string
      timestamp:
        type: string
        format: date-time
    title: Probe
  v1beta1.Tag:
    type: object
    properties:
      asset_id:
        type: string
      tag_values:
        type: array
        items:
          $ref: '#/definitions/TagValue'
      template_description:
        type: string
      template_display_name:
        type: string
      template_urn:
        type: string
    title: Tag
  v1beta1.Type:
    type: object
    properties:
      count:
        type: integer
        format: int64
      name:
        type: string
externalDocs:
  description: More about Compass
  url: https://odpf.gitbook.io/compass/
