// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	asset "github.com/odpf/columbus/asset"

	mock "github.com/stretchr/testify/mock"

	star "github.com/odpf/columbus/star"

	user "github.com/odpf/columbus/user"
)

// StarRepository is an autogenerated mock type for the Repository type
type StarRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, userID, assetID
func (_m *StarRepository) Create(ctx context.Context, userID string, assetID string) (string, error) {
	ret := _m.Called(ctx, userID, assetID)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, string) string); ok {
		r0 = rf(ctx, userID, assetID)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, userID, assetID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: ctx, userID, assetID
func (_m *StarRepository) Delete(ctx context.Context, userID string, assetID string) error {
	ret := _m.Called(ctx, userID, assetID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, userID, assetID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllAssetsByUserEmail provides a mock function with given fields: ctx, cfg, userEmail
func (_m *StarRepository) GetAllAssetsByUserEmail(ctx context.Context, cfg star.Config, userEmail string) ([]asset.Asset, error) {
	ret := _m.Called(ctx, cfg, userEmail)

	var r0 []asset.Asset
	if rf, ok := ret.Get(0).(func(context.Context, star.Config, string) []asset.Asset); ok {
		r0 = rf(ctx, cfg, userEmail)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]asset.Asset)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, star.Config, string) error); ok {
		r1 = rf(ctx, cfg, userEmail)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllAssetsByUserID provides a mock function with given fields: ctx, cfg, userID
func (_m *StarRepository) GetAllAssetsByUserID(ctx context.Context, cfg star.Config, userID string) ([]asset.Asset, error) {
	ret := _m.Called(ctx, cfg, userID)

	var r0 []asset.Asset
	if rf, ok := ret.Get(0).(func(context.Context, star.Config, string) []asset.Asset); ok {
		r0 = rf(ctx, cfg, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]asset.Asset)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, star.Config, string) error); ok {
		r1 = rf(ctx, cfg, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAssetByUserID provides a mock function with given fields: ctx, userID, assetID
func (_m *StarRepository) GetAssetByUserID(ctx context.Context, userID string, assetID string) (*asset.Asset, error) {
	ret := _m.Called(ctx, userID, assetID)

	var r0 *asset.Asset
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *asset.Asset); ok {
		r0 = rf(ctx, userID, assetID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*asset.Asset)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, userID, assetID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetStargazers provides a mock function with given fields: ctx, cfg, assetID
func (_m *StarRepository) GetStargazers(ctx context.Context, cfg star.Config, assetID string) ([]user.User, error) {
	ret := _m.Called(ctx, cfg, assetID)

	var r0 []user.User
	if rf, ok := ret.Get(0).(func(context.Context, star.Config, string) []user.User); ok {
		r0 = rf(ctx, cfg, assetID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]user.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, star.Config, string) error); ok {
		r1 = rf(ctx, cfg, assetID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
