// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	lineage "github.com/odpf/columbus/lineage"
	mock "github.com/stretchr/testify/mock"
)

// LineageRepository is an autogenerated mock type for the Repository type
type LineageRepository struct {
	mock.Mock
}

// GetGraph provides a mock function with given fields: ctx, node
func (_m *LineageRepository) GetGraph(ctx context.Context, node lineage.Node) (lineage.Graph, error) {
	ret := _m.Called(ctx, node)

	var r0 lineage.Graph
	if rf, ok := ret.Get(0).(func(context.Context, lineage.Node) lineage.Graph); ok {
		r0 = rf(ctx, node)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(lineage.Graph)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, lineage.Node) error); ok {
		r1 = rf(ctx, node)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Upsert provides a mock function with given fields: ctx, node, upstreams, downstreams
func (_m *LineageRepository) Upsert(ctx context.Context, node lineage.Node, upstreams []lineage.Node, downstreams []lineage.Node) error {
	ret := _m.Called(ctx, node, upstreams, downstreams)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, lineage.Node, []lineage.Node, []lineage.Node) error); ok {
		r0 = rf(ctx, node, upstreams, downstreams)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
